- name: ensure dockerhub group exists
  group:
    name: "{{ registry_user }}"

- name: ensure dockerhub user exists
  user:
    name: "{{ registry_user }}"
    group: "{{ registry_user }}"

- name: ensure registry dirs exist
  file:
    path: "{{ item }}"
    state: directory
    owner: dockerhub
    group: dockerhub
    mode: '0700'
  with_items: 
    - /etc/registry
    - /etc/registry/auth
    - /var/registry-data

- name: clear registry auth
  file:
    path: /etc/registry/auth/htpasswd
    state: absent

- name: write users into registry auth
  shell: |
    docker run \
    --entrypoint htpasswd \
    registry:2 \
    -Bbn '{{ item.user }}' '{{ item.password }}' \
    >> /etc/registry/auth/htpasswd
  with_items: "{{ registry_user_db }}"
  #no_log: True

- name: remove blank lines from htpasswd
  lineinfile:
    path: /etc/registry/auth/htpasswd
    state: absent
    regexp: '^$'

- name: create docker registry docker-compose.yml
  copy: 
    dest: /etc/registry/docker-compose.yml
    content: | 
      registry:
        restart: always
        image: registry:2
        ports:
          - "127.0.0.1:5000:5000"
        environment:
          REGISTRY_AUTH: htpasswd
          REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
          REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
        volumes:
          - /etc/registry/auth:/auth
          - /var/registry:/var/lib/registry
    owner: dockerhub
    group: dockerhub
    mode: '0400'

- name: stop registry 
  command: docker-compose down
  args:
    chdir: /etc/registry

- name: start registry
  command: docker-compose up -d
  args:
    chdir: /etc/registry

- name: add nginx config header
  blockinfile:
    path: /etc/nginx/sites-available/dockerhub.rstms.net
    marker: '# ansible_managed header_block {mark}'
    insertbefore: BOF
    block: |
     upstream docker-registry {
       server 127.0.0.1:5000;
     }

- name: add nginx config proxy header
  blockinfile:
    path: /etc/nginx/sites-available/dockerhub.rstms.net
    marker: '# ansible_managed location_block {mark}'
    insertbefore: '^\s*listen \[::\]:443.*'
    block: |
      # disable any limits to avoid HTTP 413 for large image uploads
      client_max_body_size 0;

      # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
      chunked_transfer_encoding on;

      location /v2/ {
        # Do not allow connections from docker 1.5 and earlier
        # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
        if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
          return 404;
        }

        ## If $docker_distribution_api_version is empty, the header is not added.
        ## See the map directive above where this variable is defined.
        ## add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

        proxy_pass                          http://docker-registry;
        proxy_set_header  Host              $http_host;   # required for docker client's sake
        proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_read_timeout                  900;
      }

- name: check nginx config files for errors
  command: nginx -t
  register: status_config

- debug: 'msg={{ status_config }}'

- name: restart nginx
  command: systemctl restart nginx 
